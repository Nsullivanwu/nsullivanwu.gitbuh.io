[
  {
    "objectID": "project4.html",
    "href": "project4.html",
    "title": "project4",
    "section": "",
    "text": "I will use the data from Wideband Acoustic Immittance (WAI) Database hosted by Smith College to recreate the figure “Mean Absorbance from Each Publication in the WAI Database” from Voss (2020).\n\nlibrary(RMariaDB)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ncon_wai &lt;- dbConnect(\n  MariaDB(), host = \"scidb.smith.edu\",\n  user = \"waiuser\", password = \"smith_waiDB\", \n  dbname= \"wai\"\n)\nMeasurements &lt;- tbl(con_wai, \"Measurements\")\nPI_Info &lt;- tbl(con_wai, \"PI_Info\")\nSubjects &lt;- tbl(con_wai, \"Subjects\")\n\n# collect(Measurements)\n\nI started this project by using the SQL query, where I grouped together the data by different categories of “Frequency”, “Year”, “Instrument”, “Identifier”, and “AuthorShortList”. I joined together the PI info and Measurements table to get the AuthorShortList. The table demonstrated the mean absorbance of frequencies starting at 200 Hertz and ending at 8000 Hertz.\n\n    SELECT \n        m.Frequency,\n        m.Identifier,\n        m.Instrument,\n        AVG(m.Absorbance) AS Mean_Absorption, \n        CONCAT(pi.AuthorsShortList, ' (', pi.Year, ')', ' N=', COUNT(DISTINCT CONCAT(m.SubjectNumber, '-', m.Ear)),'; ', m.Instrument) AS Label\n    FROM \n        Measurements m\n    JOIN \n        PI_Info pi\n        ON m.Identifier = pi.Identifier\n    WHERE \n        m.Identifier IN ('Abur_2014', 'Feeney_2017', 'Groon_2015', 'Lewis_2015', 'Lui_2008', 'Rosowski_2012', 'Shahnaz_2006', 'Shaver_2013', 'Sun_2016', 'Voss_1994', 'Voss_2010', 'Werner_2010')\n    GROUP BY \n        m.Frequency, \n        m.Identifier, \n        m.Instrument, \n        pi.Year, \n        pi.AuthorsShortList\n    ORDER BY \n        m.Frequency, \n        m.Identifier, \n        m.Instrument\n\nThere is a pattern where absorbance increases when frequency increases. However, after it reaches 1000 Hertz, it started to decrease and drop.\n\nlibrary(ggplot2)\nggplot(new_table, aes(x = Frequency, y = Mean_Absorption, color = Label)) +\n  geom_line(size = 0.6, na.rm = TRUE) +  \n  scale_x_continuous(\n    name = \"Frequency (Hz)\",\n    breaks = c(0, 2000, 3000, 3500, 3850, 6000, 7000, 7500, 8000),\n    labels = c(\"200\", \"400\", \"600\", \"800\", \"1000\", \"2000\", \"4000\", \"6000\", \"8000\")\n  ) +\n  scale_y_continuous(\n    name = \"Mean Absorbance\",\n    limits = c(0, 1), \n    breaks = seq(0, 1, by = 0.1)  \n  ) +\n  labs(\n    title = \"Mean Absorbance From Each Publication in the WAI Database\",  \n    color = NULL \n  ) +\n  theme_minimal() + \n  theme(\n    axis.text = element_text(size = 7),\n    axis.title = element_text(size = 7),\n    plot.title = element_text(size = 10, face = \"bold\", hjust = .5),\n    legend.text = element_text(size = 5),\n    legend.position = c(0.27, 0.9),\n    legend.key.size = unit(0.1, \"cm\"),\n    legend.spacing = unit(0.01, \"cm\"),\n    legend.background = element_rect(color = \"black\", size = .2, fill = \"white\"),\n    aspect.ratio = 1\n  ) +\n  coord_cartesian(xlim = c(200, 8000))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n\n\n\n\n\n\n\n\n\nNext, I will do the same thing as before, however, will group by “sex” as well. I used the study Abur (2014) to measure and show the average absorbamce of frequencies.\n\nSELECT \n    m.Frequency, \n    s.Sex, \n    AVG(m.Absorbance) AS Avg_Absorbance\nFROM \n    Measurements m\nJOIN \n    Subjects s\nON \n    m.SubjectNumber = s.SubjectNumber\nWHERE \n    m.Identifier = 'Abur_2014'\n    AND s.Sex != 'Unknown'\nGROUP BY \n    m.Frequency, s.Sex\nORDER BY \n    m.Frequency, s.Sex;\n\nThe two different lines show two sexes as subjects. The plot shows how male and female subjects have similar absorbance rates.\n\nlibrary(ggplot2)\n\nggplot(new_table4, aes(x = Frequency, y = Avg_Absorbance, color = Sex)) +\n  geom_line(size = 0.7, na.rm = TRUE) +\n  scale_x_continuous(\n    name = \"Frequency (Hz)\",\n    breaks = c(200, 400, 600, 800, 1000, 2000, 4000, 6000, 8000),\n    labels = c(\"200\", \"400\", \"600\", \"800\", \"1000\", \"2000\", \"4000\", \"6000\", \"8000\")\n  ) +\n  scale_y_continuous(\n    name = \"Average Absorbance\",\n    limits = c(0, 1), \n    breaks = seq(0, 1, by = 0.1)\n  ) +\n  labs(\n    title = \"Average Absorbance by Frequency and Gender\",\n    color = NULL \n  ) +\n  theme_minimal() +\n  theme(\n    axis.text = element_text(size = 8),\n    axis.title = element_text(size = 12),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    legend.text = element_text(size = 8),\n    legend.position = c(0.1, 0.9),\n    legend.box.background = element_rect(color = \"black\", fill = \"white\", size = 0.5) \n  ) +\n  coord_cartesian(xlim = c(200, 8000))"
  },
  {
    "objectID": "coffee.html",
    "href": "coffee.html",
    "title": "My phenomenal first website!",
    "section": "",
    "text": "coffeedata &lt;- tidytuesdayR:: tt_load('2020-07-07')\n\n---- Compiling #TidyTuesday Information for 2020-07-07 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"coffee_ratings.csv\"\n\ncoffee_ratings &lt;- coffeedata$coffee_ratings\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\ncoffee_ratings |&gt;\n  select(total_cup_points, country_of_origin) |&gt;\n  group_by(country_of_origin)\n\n# A tibble: 1,339 × 2\n# Groups:   country_of_origin [37]\n   total_cup_points country_of_origin\n              &lt;dbl&gt; &lt;chr&gt;            \n 1             90.6 Ethiopia         \n 2             89.9 Ethiopia         \n 3             89.8 Guatemala        \n 4             89   Ethiopia         \n 5             88.8 Ethiopia         \n 6             88.8 Brazil           \n 7             88.8 Peru             \n 8             88.7 Ethiopia         \n 9             88.4 Ethiopia         \n10             88.2 Ethiopia         \n# ℹ 1,329 more rows\n\n\n\nlibrary(ggplot2)\nggplot(coffee_ratings, aes(x = reorder(country_of_origin, total_cup_points), y = total_cup_points, fill = country_of_origin)) +\n    geom_bar(stat = \"identity\") + \n    coord_flip() + \n    labs(title = \"Amount of cup points by country of origin\", \n         x = \"country of origin\", \n         y = \"total cup points\") + \n    theme_minimal() + \n    theme(legend.position = \"name\")"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "My phenomenal first website!",
    "section": "",
    "text": "title: “My resources”"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Natalie Sullivan Wu",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "rodent_data.html",
    "href": "rodent_data.html",
    "title": "Species of Rodents",
    "section": "",
    "text": "rodentdata &lt;- tidytuesdayR:: tt_load('2023-05-02')\n\n---- Compiling #TidyTuesday Information for 2023-05-02 ----\n--- There are 3 files available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 3: \"plots.csv\"\n  2 of 3: \"species.csv\"\n  3 of 3: \"surveys.csv\"\n\nspecies &lt;- rodentdata$species\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nweight &lt;- species %&gt;%\n  mutate(difference_weight = meanwgt - juvwgt, )\n\n\nlibrary(ggplot2)\nggplot(weight, aes(x = reorder(commonname, difference_weight), y = difference_weight, fill = difference_weight))+ \n  geom_bar(stat = \"identity\")+\n  coord_flip() +\n  scale_fill_gradient(low = \"yellow\", high = \"darkblue\") + \n  labs(title = \"Difference in Weight for Rodent Species\", \n       x = \"Name of Species\",\n       y = \"Difference in Weight\"\n       ) + \n  theme_minimal()\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_bar()`)."
  }
]