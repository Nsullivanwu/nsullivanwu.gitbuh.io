[
  {
    "objectID": "project4.html",
    "href": "project4.html",
    "title": "Project 4 – SQL",
    "section": "",
    "text": "I will use the data from Wideband Acoustic Immittance (WAI) Database hosted by Smith College to recreate the figure “Mean Absorbance from Each Publication in the WAI Database” from Voss (2020).\n\nlibrary(RMariaDB)\nlibrary(tidyverse)\ncon_wai &lt;- dbConnect(\n  MariaDB(), host = \"scidb.smith.edu\",\n  user = \"waiuser\", password = \"smith_waiDB\", \n  dbname= \"wai\"\n)\nMeasurements &lt;- tbl(con_wai, \"Measurements\")\nPI_Info &lt;- tbl(con_wai, \"PI_Info\")\nSubjects &lt;- tbl(con_wai, \"Subjects\")\n\n# collect(Measurements)\n\nI started this project by using the SQL query, where I grouped together the data by different categories of “Frequency”, “Year”, “Instrument”, “Identifier”, and “AuthorShortList”. I joined together the PI info and Measurements table to get the AuthorShortList. The table demonstrated the mean absorbance of frequencies starting at 200 Hertz and ending at 8000 Hertz.\n\n    SELECT \n        m.Frequency,\n        m.Identifier,\n        m.Instrument,\n        AVG(m.Absorbance) AS Mean_Absorption, \n        CONCAT(pi.AuthorsShortList, ' (', pi.Year, ')', ' N=', COUNT(DISTINCT CONCAT(m.SubjectNumber, '-', m.Ear)),'; ', m.Instrument) AS Label\n    FROM \n        Measurements m\n    JOIN \n        PI_Info pi\n        ON m.Identifier = pi.Identifier\n    WHERE \n        m.Identifier IN ('Abur_2014', 'Feeney_2017', 'Groon_2015', 'Lewis_2015', 'Lui_2008', 'Rosowski_2012', 'Shahnaz_2006', 'Shaver_2013', 'Sun_2016', 'Voss_1994', 'Voss_2010', 'Werner_2010')\n        AND m.frequency BETWEEN 200 AND 8000\n    GROUP BY \n        m.Frequency, \n        m.Identifier, \n        m.Instrument, \n        pi.Year, \n        pi.AuthorsShortList\n    ORDER BY \n        m.Frequency, \n        m.Identifier, \n        m.Instrument\n\nThere is a pattern where absorbance increases when frequency increases. However, after it reaches 1000 Hertz, it started to decrease and drop.\n\nlibrary(ggplot2)\nggplot(new_table, aes(x = Frequency, y = Mean_Absorption, color = Label)) +\n  geom_line(size = 0.6, na.rm = TRUE) +  \n  scale_x_continuous(\n    name = \"Frequency (Hz)\",\n    breaks = c(0, 2000, 3000, 3500, 3850, 6000, 7000, 7500, 8000),\n    labels = c(\"200\", \"400\", \"600\", \"800\", \"1000\", \"2000\", \"4000\", \"6000\", \"8000\")\n  ) +\n  scale_y_continuous(\n    name = \"Mean Absorbance\",\n    limits = c(0, 1), \n    breaks = seq(0, 1, by = 0.1)  \n  ) +\n  labs(\n    title = \"Mean Absorbance From Each Publication in the WAI Database\",  \n    color = NULL \n  ) +\n  theme_minimal() + \n  theme(\n    axis.text = element_text(size = 7),\n    axis.title = element_text(size = 7),\n    plot.title = element_text(size = 10, face = \"bold\", hjust = .5),\n    legend.text = element_text(size = 5),\n    legend.position = c(0.27, 0.9),\n    legend.key.size = unit(0.1, \"cm\"),\n    legend.spacing = unit(0.01, \"cm\"),\n    legend.background = element_rect(color = \"black\", size = .2, fill = \"white\"),\n    aspect.ratio = 1\n  ) \n\n\n\n\n\n\n\n\nNext, I will do the same thing as before, however, will group by “sex” as well. I used the study Abur (2014) to measure and show the average absorbamce of frequencies.\n\nSELECT \n    m.Frequency, \n    s.Sex, \n    AVG(m.Absorbance) AS Avg_Absorbance\nFROM \n    Measurements m\nJOIN \n    Subjects s\nON \n    m.SubjectNumber = s.SubjectNumber\nWHERE \n    m.Identifier = 'Abur_2014'\n    AND s.Sex != 'Unknown'\n    AND m.frequency BETWEEN 200 AND 8000\nGROUP BY \n    m.Frequency, s.Sex\nORDER BY \n    m.Frequency, s.Sex;\n\nThe two different lines show two sexes as subjects. The plot shows how male and female subjects have similar absorbance rates.\n\nlibrary(ggplot2)\n\nggplot(new_table4, aes(x = Frequency, y = Avg_Absorbance, color = Sex)) +\n  geom_line(size = 0.7, na.rm = TRUE) +\n  scale_x_log10(\n    name = \"Frequency (Hz)\",\n    breaks = c(200, 400, 600, 800, 1000, 2000, 4000, 6000, 8000),\n    labels = c(\"200\", \"400\", \"600\", \"800\", \"1000\", \"2000\", \"4000\", \"6000\", \"8000\")\n  ) +\n  scale_y_continuous(\n    name = \"Average Absorbance\",\n    limits = c(0, 1), \n    breaks = seq(0, 1, by = 0.1)\n  ) +\n  labs(\n    title = \"Average Absorbance by Frequency and Gender\",\n    color = NULL \n  ) +\n  theme_minimal() +\n  theme(\n    axis.text = element_text(size = 8),\n    axis.title = element_text(size = 12),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    legend.text = element_text(size = 8),\n    legend.position = c(0.1, 0.9),\n    legend.box.background = element_rect(color = \"black\", fill = \"white\", size = 0.5) \n  )"
  },
  {
    "objectID": "coffee.html",
    "href": "coffee.html",
    "title": "Coffee Ratings",
    "section": "",
    "text": "coffeedata &lt;- tidytuesdayR:: tt_load('2020-07-07')\ncoffee_ratings &lt;- coffeedata$coffee_ratings\n\n\nlibrary(dplyr)\ncoffee_ratings |&gt;\n  select(total_cup_points, country_of_origin) |&gt;\n  group_by(country_of_origin)\n\n# A tibble: 1,339 × 2\n# Groups:   country_of_origin [37]\n   total_cup_points country_of_origin\n              &lt;dbl&gt; &lt;chr&gt;            \n 1             90.6 Ethiopia         \n 2             89.9 Ethiopia         \n 3             89.8 Guatemala        \n 4             89   Ethiopia         \n 5             88.8 Ethiopia         \n 6             88.8 Brazil           \n 7             88.8 Peru             \n 8             88.7 Ethiopia         \n 9             88.4 Ethiopia         \n10             88.2 Ethiopia         \n# ℹ 1,329 more rows\n\ncoffee_ratings\n\n# A tibble: 1,339 × 43\n   total_cup_points species owner   country_of_origin farm_name lot_number mill \n              &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;             &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;\n 1             90.6 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 2             89.9 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 3             89.8 Arabica ground… Guatemala         \"san mar… &lt;NA&gt;       &lt;NA&gt; \n 4             89   Arabica yidnek… Ethiopia          \"yidneka… &lt;NA&gt;       wole…\n 5             88.8 Arabica metad … Ethiopia          \"metad p… &lt;NA&gt;       meta…\n 6             88.8 Arabica ji-ae … Brazil             &lt;NA&gt;     &lt;NA&gt;       &lt;NA&gt; \n 7             88.8 Arabica hugo v… Peru               &lt;NA&gt;     &lt;NA&gt;       hvc  \n 8             88.7 Arabica ethiop… Ethiopia          \"aolme\"   &lt;NA&gt;       c.p.…\n 9             88.4 Arabica ethiop… Ethiopia          \"aolme\"   &lt;NA&gt;       c.p.…\n10             88.2 Arabica diamon… Ethiopia          \"tulla c… &lt;NA&gt;       tull…\n# ℹ 1,329 more rows\n# ℹ 36 more variables: ico_number &lt;chr&gt;, company &lt;chr&gt;, altitude &lt;chr&gt;,\n#   region &lt;chr&gt;, producer &lt;chr&gt;, number_of_bags &lt;dbl&gt;, bag_weight &lt;chr&gt;,\n#   in_country_partner &lt;chr&gt;, harvest_year &lt;chr&gt;, grading_date &lt;chr&gt;,\n#   owner_1 &lt;chr&gt;, variety &lt;chr&gt;, processing_method &lt;chr&gt;, aroma &lt;dbl&gt;,\n#   flavor &lt;dbl&gt;, aftertaste &lt;dbl&gt;, acidity &lt;dbl&gt;, body &lt;dbl&gt;, balance &lt;dbl&gt;,\n#   uniformity &lt;dbl&gt;, clean_cup &lt;dbl&gt;, sweetness &lt;dbl&gt;, cupper_points &lt;dbl&gt;, …\n\n\n\nlibrary(ggplot2)\nggplot(coffee_ratings, aes(x = reorder(country_of_origin, total_cup_points), y = total_cup_points, fill = country_of_origin)) +\n    geom_bar(stat = \"identity\") + \n    coord_flip() + \n    labs(title = \"Amount of cup points by country of origin\", \n         x = \"country of origin\", \n         y = \"total cup points\") + \n    theme_minimal() + \n    theme(legend.position = \"name\")\n\n\n\n\n\n\n\n\nUsing Facet Wrapping, I will create a faceted graph to show the different factors that may affect the cup points for the type of coffee.\n\ncoffee_ratings &lt;- coffee_ratings |&gt;\n  filter(!is.na(country_of_origin))\n\nggplot(coffee_ratings, aes(x = total_cup_points)) +\n  geom_histogram(binwidth = 2, fill = \"skyblue\", color = \"black\") +\n  facet_wrap(~ country_of_origin) +\n  labs(\n    title = \"Distribution of Total Cup Points by Country of Origin\",\n    x = \"Total Cup Points\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5),\n    strip.text = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\n\n# Load required libraries\nlibrary(shiny)\nlibrary(tidytuesdayR)\n\ncoffee_data &lt;- tidytuesdayR::tt_load('2020-07-07')$coffee_ratings\n\n\nui &lt;- fluidPage(\n  titlePanel(\"Coffee Ratings (by Country) Based on Sweetness Levels\"),\n  \n  selectInput(\"country\", \"Select a Country of Origin:\",\n              choices = unique(coffee_data$country_of_origin),\n              selected = \"Ethiopia\"),\n  plotOutput(\"scatterPlot\")\n)\n\nserver &lt;- function(input, output) {\n    new_data &lt;- reactive({\n    coffee_data |&gt;\n      filter(country_of_origin == input$country)\n  })\n    output$scatterPlot &lt;- renderPlot({\n    ggplot(new_data(), aes(x = sweetness, y = total_cup_points)) +\n      geom_point(color = \"black\", size = 3, alpha = 0.7) +\n      labs(\n        title = paste(\"Coffee Ratings for\", input$country),\n        x = \"Sweetness\",\n        y = \"Total Cup Points\"\n      ) +\n      theme_minimal()\n  })\n}\n\nshinyApp(ui = ui, server = server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "rodent_data.html",
    "href": "rodent_data.html",
    "title": "Species of Rodents",
    "section": "",
    "text": "rodentdata &lt;- tidytuesdayR:: tt_load('2023-05-02')\nspecies &lt;- rodentdata$species\n\n\nlibrary(dplyr)\nweight &lt;- species %&gt;%\n  mutate(difference_weight = meanwgt - juvwgt, )\n\n\nlibrary(ggplot2)\nggplot(weight, aes(x = reorder(commonname, difference_weight), y = difference_weight, fill = difference_weight))+ \n  geom_bar(stat = \"identity\")+\n  coord_flip() +\n  scale_fill_gradient(low = \"yellow\", high = \"darkblue\") + \n  labs(title = \"Difference in Weight for Rodent Species\", \n       x = \"Name of Species\",\n       y = \"Difference in Weight\"\n       ) + \n  theme_minimal()"
  },
  {
    "objectID": "project5.html#permutation-test",
    "href": "project5.html#permutation-test",
    "title": "Birthday Paradox Presentation",
    "section": "Permutation Test",
    "text": "Permutation Test\nBirthday paradox – Harold Davenport (1927) - The birthday paradox (birthday problem) is the fact that there is a 50% or larger chance that two people in a group of 23 have the same birthday"
  },
  {
    "objectID": "project5.html#my-project",
    "href": "project5.html#my-project",
    "title": "Birthday Paradox Presentation",
    "section": "My Project",
    "text": "My Project\n\nfind the birthday paradox for N amount of people\n\n\nsim_shared_bday &lt;- function(N){\n  bdays &lt;- sample(1:365, N, replace = TRUE)\n  return(length(bdays) != length(unique(bdays)))\n}"
  },
  {
    "objectID": "project5.html#estimating-the-probability-of-shared-birthdays",
    "href": "project5.html#estimating-the-probability-of-shared-birthdays",
    "title": "Birthday Paradox Presentation",
    "section": "Estimating the Probability of Shared Birthdays",
    "text": "Estimating the Probability of Shared Birthdays\n\nmultiple simulations using sapply()\n\n\nestimate_shared_bday &lt;- function(N, num_sims){\n  outcome &lt;- sapply(1:num_sims, function(x) sim_shared_bday(N))\n  return(mean(outcome))\n}"
  },
  {
    "objectID": "project5.html#set-the-parameters-define-our-probability-and-plot",
    "href": "project5.html#set-the-parameters-define-our-probability-and-plot",
    "title": "Birthday Paradox Presentation",
    "section": "Set the Parameters, Define our Probability, and Plot",
    "text": "Set the Parameters, Define our Probability, and Plot\n\ngrp_size &lt;- 2:100\nnum_sims &lt;- 1000 \nprob &lt;- map_dbl(grp_size, ~ estimate_shared_bday(.x, num_sims))\ndata &lt;- data.frame(group_size = grp_size, probability = prob)\n\nggplot(data, aes(x = group_size, y = probability)) + \n  geom_point(color = \"red\", size = 2) + \n  geom_line(size = 1) + \n  labs(\n    title = \"Shared Birthday Probaility Graph\",\n    x = \"Amount of People\",\n    y = \"Probability of Having a Shared Birthday\"\n  ) + \n  theme_minimal()"
  },
  {
    "objectID": "project5.html#in-comparison-to-the-50-threshhold",
    "href": "project5.html#in-comparison-to-the-50-threshhold",
    "title": "Birthday Paradox Presentation",
    "section": "In Comparison to the 50% Threshhold",
    "text": "In Comparison to the 50% Threshhold\n\ngrp_size &lt;- 2:100\nnum_sims &lt;- 1000 \nprob &lt;- map_dbl(grp_size, ~ estimate_shared_bday(.x, num_sims))\ndata &lt;- data.frame(group_size = grp_size, probability = prob)\n\nggplot(data, aes(x = group_size, y = probability)) + \n  geom_point(color = \"red\", size = 2) + \n  geom_line(size = 1) + \n  geom_hline(yintercept = 0.5, linetype = \"dashed\", color = \"blue\", size = 1) + \n  scale_x_continuous(breaks = seq(0, 100, by = 5)) + \n  labs(\n    title = \"Shared Birthday Probaility Graph\",\n    x = \"Amount of People\",\n    y = \"Probability of Having a Shared Birthday\"\n  ) + \n  theme_minimal()"
  },
  {
    "objectID": "project5.html#takeaways",
    "href": "project5.html#takeaways",
    "title": "Birthday Paradox Presentation",
    "section": "Takeaways",
    "text": "Takeaways\n\nIncrease in group size increases –&gt; rapid increase in probability (exponential)\nContradicts intuitive prediction –&gt; The probability would increase slowly\nAfter exponential growth –&gt; Slope decreases (at 50 people)"
  }
]